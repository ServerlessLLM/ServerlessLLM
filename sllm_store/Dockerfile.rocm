# ---------------------------------------------------------------------------- #
#  ServerlessLLM                                                               #
#  Copyright (c) ServerlessLLM Team 2024                                       #
#                                                                              #
#  Licensed under the Apache License, Version 2.0 (the "License");             #
#  you may not use this file except in compliance with the License.            #
#                                                                              #
#  You may obtain a copy of the License at                                     #
#                                                                              #
#                  http://www.apache.org/licenses/LICENSE-2.0                  #
#                                                                              #
#  Unless required by applicable law or agreed to in writing, software         #
#  distributed under the License is distributed on an "AS IS" BASIS,           #
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    #
#  See the License for the specific language governing permissions and         #
#  limitations under the License.                                              #
# ---------------------------------------------------------------------------- #

ARG BASE_IMAGE="rocm/pytorch:rocm6.2_ubuntu22.04_py3.10_pytorch_release_2.3.0"
# Stage 1: Build the wheel
FROM ${BASE_IMAGE} AS builder
ENV DEBIAN_FRONTEND=noninteractive

RUN echo 'tzdata tzdata/Areas select America' | debconf-set-selections \
    && echo 'tzdata tzdata/Zones/America select Los_Angeles' | debconf-set-selections \
    && apt-get update -y \
    && apt-get install -y ccache software-properties-common git curl sudo \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update -y

WORKDIR /app

# Add the rest of the files
COPY cmake ./cmake
COPY CMakeLists.txt .
COPY csrc ./csrc
COPY sllm_store ./sllm_store
COPY setup.py .
COPY pyproject.toml .
COPY MANIFEST.in .
COPY requirements.txt .
COPY README.md .
COPY proto ./proto

# Set using existing torch
COPY requirements-build.txt .
COPY using_existing_torch.py .
RUN python3 using_existing_torch.py
RUN python3 -m pip install -r requirements-build.txt


# enable compile without AMD GPU
ENV PYTORCH_ROCM_ARCH="gfx906 gfx908 gfx90a gfx940 gfx941 gfx942 gfx1030 gfx1100"

RUN python3 setup.py sdist bdist_wheel

# Stage 2: Start sllm store
FROM ${BASE_IMAGE}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /app

# Copy the built wheels from the builder
COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/requirements.txt /app/requirements.txt

# Install the built wheels
RUN python3 -m pip install /app/dist/*.whl

# Copy the examples
COPY examples /app/examples

ENTRYPOINT [ "sllm-store", "start" ]
CMD [ "--storage-path", "/models", "--mem-pool-size", "4GB" ]
