# ---------------------------------------------------------------------------- #
#  ServerlessLLM                                                               #
#  Copyright (c) ServerlessLLM Team 2024                                       #
#                                                                              #
#  Licensed under the Apache License, Version 2.0 (the "License");             #
#  you may not use this file except in compliance with the License.            #
#                                                                              #
#  You may obtain a copy of the License at                                     #
#                                                                              #
#                  http://www.apache.org/licenses/LICENSE-2.0                  #
#                                                                              #
#  Unless required by applicable law or agreed to in writing, software         #
#  distributed under the License is distributed on an "AS IS" BASIS,           #
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    #
#  See the License for the specific language governing permissions and         #
#  limitations under the License.                                              #
# ---------------------------------------------------------------------------- #

ARG BASE_IMAGE="rocm/vllm-dev:base_ROCm-6.3.1_20250528_tuned_20250530"
ARG PYTORCH_ROCM_ARCH="gfx908;gfx90a;gfx942;gfx1100"

# vLLM branch version
ARG VLLM_BRANCH="v0.9.0.1"


# Base image build stage
FROM ${BASE_IMAGE} AS base
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get purge -y sccache; python3 -m pip uninstall -y sccache; rm -f "$(which sccache)"

# Set environment variables for LLVM and paths
ENV LLVM_SYMBOLIZER_PATH=/opt/rocm/llvm/bin/llvm-symbolizer
ENV PATH=$PATH:/opt/rocm/bin:/libtorch/bin
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/rocm/lib/:/libtorch/lib
ENV CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/libtorch/include:/libtorch/include/torch/csrc/api/include/:/opt/rocm/include/

ENV PYTORCH_ROCM_ARCH=${PYTORCH_ROCM_ARCH}

WORKDIR /app

### sllm-store wheel build stage
FROM base AS builder
# Add project files
COPY cmake ./cmake
COPY CMakeLists.txt .
COPY csrc ./csrc
COPY sllm_store ./sllm_store
COPY setup.py .
COPY pyproject.toml .
COPY MANIFEST.in .
COPY requirements.txt .
COPY README.md .
COPY proto ./proto

# Set up the environment using the existing torch version
COPY requirements-build.txt .
COPY using_existing_torch.py .
RUN python3 using_existing_torch.py
RUN python3 -m pip install -r requirements-build.txt

RUN python3 setup.py sdist bdist_wheel

### vLLM build stage
FROM base AS build_vllm
ARG VLLM_BRANCH

WORKDIR /app/third_party

RUN pip install /opt/rocm/share/amd_smi

RUN if ls libs/*.whl; then \
    python3 -m pip install libs/*.whl; fi

RUN git clone https://github.com/vllm-project/vllm.git  \
    && cd vllm \
    && git checkout "${VLLM_BRANCH}" \
    && pip install --upgrade numba scipy \
    && pip install huggingface-hub[cli,hf_transfer] \
    && pip install --upgrade setuptools \
    && pip install setuptools_scm \
    && pip install "numpy<2" \
    && pip install -r requirements/rocm.txt

RUN cd vllm && python3 setup.py clean --all && python3 setup.py develop

COPY vllm_patch vllm_patch
RUN vllm_patch/patch.sh

### Final image build stage
FROM build_vllm
WORKDIR /app

# Copy the built wheels from the builder stage
COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/requirements.txt /app/requirements.txt

# Install the built wheels
RUN python3 -m pip install /app/dist/*.whl

# Copy example files
COPY examples /app/examples

# Set storage path env
ENV STORAGE_PATH=/models

ENTRYPOINT [ "sllm-store", "start" ]
CMD [ "--storage-path", "/models", "--mem-pool-size", "4GB" ]
